{% comment %}ly_global_begin{% endcomment %}{% include 'ly-global' %}{% comment %}ly_global_end{% endcomment %}

<section class="homepage-section animate wow fadeIn">
  {% if settings.display-wide %}
  {% else %}
  <div class="row">
    <div class="desktop-12 tablet-6 mobile-3">
      {% endif %}

      {% if settings.homepage-display == 'video' %}
      <div class="videoWrapper">
        {{ settings.video-embed }}
      </div>

      {% elsif settings.homepage-display == 'slideshow' %}

			<div id="slider-overlay" class="hidden slider-container">
        <span></span>
			</div>

	  <div class="flexslider">
	        <ul class="slides">


	          {% for i in (1..5) %}
	          {% assign slide_show = 'slide-' | append: i | append: '-check' %}

	          {% if settings[slide_show] %}
	          {% assign index = 'slide' | append: i %}
	          {% assign slide_link_url = 'slide' | append: i | append: '_url' %}
	          {% assign slide_img_url = 'slide' | append: i | append: '.jpg' %}
	          {% assign slide_img_alt = 'slide' | append: i | append: '_alt' %}
	          {% assign slide_title = 'slide-' | append: i | append: '-title' %}
	          {% assign slide_caption = 'slide-' | append: i | append: '-caption' %}
	          {% assign slide_button = 'slide-' | append: i | append: '-button' %}
	          {% assign slide_button_text = 'slide-' | append: i | append: '-button-text' %}

	          <li>
	            <a href="{{ settings[slide_link_url] }}">
	              <img src="{% comment %}ly_asset_replace_for_[ slide_img_url | asset_url ]_begin{% endcomment %}{% assign ly_asset = slide_img_url %}{% include 'ly-asset' with ly_asset %}{{ ly_translation  }}{% comment %}ly_asset_replace_end{% endcomment %}" alt="{{ settings[slide_img_alt] }}" />
	            </a>
	            <div class="flex-caption {{ index }}">
	  			{% if settings[slide_title] != blank %}
	              <h2 class="slide-title">{{ settings[slide_title] }}</h2>
	              {% endif %}
	  			{% if settings[slide_caption] != blank %}
	              <p class="caption">{{ settings[slide_caption] }}</p>
	              {% endif %}
	              {% if settings[slide_button] %}
	              <div class="cta">
	                <a href="{{ settings[slide_link_url] }}">{{ settings[slide_button_text] }}</a>
	              </div>
	              {% endif %}


	            </div>
	          </li>
	          {% endif %}
	          {% endfor %}
	        </ul>
	      </div>
      {% endif %}

      {% if settings.display-wide %}
      {% else %}
    </div>
  </div>
    {% endif %}
<div class="clear"></div>
</section>

<style>
	.homepage-section li > a {
  	display: block;
    overflow: hidden;
  }

	#slider-overlay {
		width: 0;
	}

	.slider-container, #slider-overlay svg, svg foreignObject {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}


  .slider-container {
    width: calc(100% + 15px);
    mask-image: linear-gradient(90deg, rgba(0, 0, 0, 1) calc(100% - 15px), rgba(0, 0, 0, 0) calc(100%));
    -webkit-mask-image: linear-gradient(90deg, rgba(0, 0, 0, 1) calc(100% - 15px), rgba(0, 0, 0, 0) calc(100%));
    overflow: hidden;
  }

  svg mask {
    /*position: absolute;*/
  }

	/*ul.slides li svg foreignObject {
		mask: url("#mask");
    -webkit-mask: url("#mask");
  }*/

	#slider-overlay span {
    background: transparent url({{ 'slide2.jpg' | asset_url }}) no-repeat scroll 0 0;
    background-size: cover;
    /*position: absolute;*/
    left: 0px;
    top: 0px;
    display: block;
    width: 100%;
    height: 100%;
    mask: url("#mask");
  }

	#slider-overlay.hidden {
		display: none;
	}
</style>

<script>

	function makeSlider() {
		var mainContainer = $('.homepage-section .row:first-of-type ul li a').first();
    var sliderContainer = $('#slider-overlay').clone();
    var span = sliderContainer.find('span');
    var initialUrl = mainContainer.attr('href');
    var altUrl = "https://www.spinellikilcollin.com/collections/stellar-collection/products/nova-rose-sp?variant=30014210243";

    sliderContainer.appendTo(mainContainer).removeClass('hidden');

    var containerLeft, containerWidth, targetWidth;
    var isAnimating = false;
    var sliderWidth = 0;

    function calculate() {
      containerLeft = mainContainer.offset().left;
      containerWidth = mainContainer.outerWidth();
      span.css('width', containerWidth);
    }

    function setTargetWidth(newWidth) {
      targetWidth = newWidth;
      if (!isAnimating) window.requestAnimationFrame(moveSlider);
    }

    function moveSlider() {
      isAnimating = true;
      var diff = (targetWidth - sliderWidth);
      sliderWidth = (sliderWidth + (diff * 0.15));
      sliderContainer.css('width', sliderWidth + 'px');
      if (Math.abs(diff) > .5) {
        window.requestAnimationFrame(moveSlider);
      } else {
        isAnimating = false;
      }
    }

    function setUrl(newUrl) {
      mainContainer.attr('href', newUrl);
      console.log(newUrl);
    }

    calculate();
    $(window).on('resize', calculate);

    mainContainer.on('mousemove', function(e) {
      setTargetWidth(Math.round(e.clientX - containerLeft));
      var pos = (sliderWidth / containerWidth);
      console.log(pos);
      var newUrl = (pos > .5) ? altUrl : initialUrl;
      setUrl(newUrl);
    })

    mainContainer.on('mouseleave', function(e) {
      var pos = (sliderWidth / containerWidth);
      var newWidth = (pos > .5) ? containerWidth + 15 : 0;
      setTargetWidth(newWidth);
      // setTargetWidth(containerWidth * .5);
    })

	}

	$(window).on('load', makeSlider);

</script>
