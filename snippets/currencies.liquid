{% comment %}ly_global_begin{% endcomment %}{% include 'ly-global' %}{% comment %}ly_global_end{% endcomment %}{% if settings.show_multiple_currencies %}

{{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}
{% comment %}ly_asset_replace_for_[ "jquery.currencies.min.js" | asset_url | script_tag ]_begin{% endcomment %}{% assign ly_asset = "jquery.currencies.min.js" %}{% include 'ly-asset' with ly_asset %}{{ ly_translation  | script_tag }}{% comment %}ly_asset_replace_end{% endcomment %}

{% comment %}
Override Currency Conversion
{% endcomment %}
<script type="text/javascript">
(function() {
if (typeof Currency !== 'undefined') {
	var convertAll = Currency.convertAll;
	
  	Currency.decode = function(str) {
	    var txt = document.createElement("textarea");
	    txt.innerHTML = str;
	    return txt.value;
  	}
  
	Currency.convertAll = function(c, b, a, d) {
      jQuery(a || "span.money").each(function() {
          if (jQuery(this).attr("data-currency") === b) {
              return;
          }
        
          if (jQuery(this).attr("data-currency-" + b)) {
              jQuery(this).html(jQuery(this).attr("data-currency-" + b));
          } else {
              var e = 0;
              var f = Currency.moneyFormats[c][d || Currency.format] || "{{amount}}";
              var g = Currency.moneyFormats[b][d || Currency.format] || "{{amount}}";
              if (f.indexOf("amount_no_decimals") !== -1) {
                  e = Currency.convert(parseInt(jQuery(this).html().replace(/[^0-9]/g, ""), 10) * 100, c, b);
              } else {
                  if (c === "JOD" || c == "KWD" || c == "BHD") {
                      e = Currency.convert(parseInt(jQuery(this).html().replace(/[^0-9]/g, ""), 10) / 10, c, b);
                  } else {
                      e = Currency.convert(parseInt(jQuery(this).html().replace(/[^0-9]/g, ""), 10), c, b);
                  }
              }
            
              var h = Currency.formatMoney(e, g);
              jQuery(this).html(h);
              jQuery(this).attr("data-currency-" + b, h);
          }

          /* override conversion */
          /*
          switch(b) {
            case 'USD':
            case 'CAD':
              break;
            case 'GBP':
            case 'EUR':
              jQuery(this).html(Currency.formatMoney(e * 1.2, g));
              break;
            default:
              jQuery(this).html(Currency.formatMoney(e * 1.35, g));
              break;
          }
          */
        
          jQuery(this).attr("data-currency", b);
      });
      
      this.currentCurrency = b;
      this.cookie.write(b);
	}
}
})();
</script>

<script>

{% if settings.currency_format %}
Currency.format = '{{ settings.currency_format }}';
{% endif %}

var shopCurrency = '{{ shop.currency }}';

/* Sometimes merchants change their shop currency, let's tell our JavaScript file */
Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
  
/* Default currency */
var defaultCurrency = '{{ settings.default_currency }}' || shopCurrency;
  
/* Cookie currency */
var cookieCurrency = Currency.cookie.read();

/* Fix for customer account pages */
jQuery('span.money span.money').each(function() {
  jQuery(this).parents('span.money').removeClass('money');
});

/* Saving the current price */
jQuery('span.money').each(function() {
  jQuery(this).attr('data-currency-{{ shop.currency }}', jQuery(this).html());
});

// If there's no cookie.
if (cookieCurrency == null) {
  if (shopCurrency !== defaultCurrency) {
    Currency.convertAll(shopCurrency, defaultCurrency);
  }
  else {
    Currency.currentCurrency = defaultCurrency;
  }
}
// If the cookie value does not correspond to any value in the currency dropdown.
else if (jQuery('[name=currencies]').size() && jQuery('[name=currencies] option[value=' + cookieCurrency + ']').size() === 0) {
  Currency.currentCurrency = shopCurrency;
  Currency.cookie.write(shopCurrency);
}
else if (cookieCurrency === shopCurrency) {
  Currency.currentCurrency = shopCurrency;
}
else {
  Currency.convertAll(shopCurrency, cookieCurrency);
}

jQuery('[name=currencies]').val(Currency.currentCurrency).change(function() {
  var newCurrency = jQuery(this).val();
  Currency.convertAll(Currency.currentCurrency, newCurrency);
  jQuery('.selected-currency').text(Currency.currentCurrency);
});

var original_selectCallback = window.selectCallback;
var selectCallback = function(variant, selector) {
  original_selectCallback(variant, selector);
  Currency.convertAll(shopCurrency, jQuery('[name=currencies]').val());
  jQuery('.selected-currency').text(Currency.currentCurrency);
};

jQuery('.selected-currency').text(Currency.currentCurrency);

</script>

{% endif %}