{% comment %}ly_global_begin{% endcomment %}{% include 'ly-global' %}{% comment %}ly_global_end{% endcomment %}<form action="/cart/add" method="post" data-money-format="{{ shop.money_format }}" id="product-form-{{ product.id }}">
  {% if product.options.size > 1 %}
  <div class="select">
    <select id="product-select-{{ product.id }}" name='id'>
      {% for variant in product.variants %}
      <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{% comment %}ly_code_replace_for_[ variant.title ]_begin{% endcomment %}{% include 'ly-title' with variant %}{{ ly_translation }}{% comment %}ly_code_replace_end{% endcomment %} - {{ variant.price | money }}</option>
      {% endfor %}
    </select>
  </div>
  {% if template != 'product.quick' %}
  {% for option in product.options %}
  {% include 'swatch' with option %}
  {% endfor %}
  {% endif %}
  {% elsif product.options.size == 1 and product.variants.size > 1 %}
  <div class="select">
    <label>{{ product.options[0] }}</label>
    <select id="product-select-{{ product.id }}" name='id'>
      {% for variant in product.variants %}
      <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{% comment %}ly_code_replace_for_[ variant.title ]_begin{% endcomment %}{% include 'ly-title' with variant %}{{ ly_translation }}{% comment %}ly_code_replace_end{% endcomment %} - {{ variant.price | money }}</option>
      {% endfor %}
    </select>
  </div>
  {% if template != 'product.quick' %}
  {% for option in product.options %}
  {% include 'swatch' with option %}
  {% endfor %}
  {% endif %}
  {% else %}
  <div class="what-is-it">
    {% if product.options.first != 'Title' %}
    <label>{{ product.options.first }}:</label>{% for variant in product.variants %}<span class="it-is">{% comment %}ly_code_replace_for_[ variant.option1 | escape ]_begin{% endcomment %}{% include 'ly-option1' with variant %}{{ ly_translation | escape }}{% comment %}ly_code_replace_end{% endcomment %}</span>{% endfor %}
    {% endif %}
  </div>
  <div class="product-variants"></div><!-- product variants -->  
  <input  type="hidden" id="{{ variant.id }}" name="id" value="{{ product.variants[0].id }}" />    
  {% endif %}

  {% if product.available %}  
  <div class="product-add">
    {% if settings.product_quantity %}
    <h5>{% comment %}ly_i18n_replace_for_[ 'products.product.quantity' | t ]_begin{% endcomment %}{% capture ly_template %}{{ 'products.product.quantity' | t }}{% endcapture %}{% include 'ly-static-string' with '2929571' %}{% if ly_translation %}{% assign escape_content = true %}{% assign ly_template = ly_translation %}{% else %}{% assign escape_content = false %}{% endif %}{% if escape_content %}{{ ly_template | escape}}{% else %}{{ ly_template }}{% endif %}{% comment %}ly_i18n_replace_end{% endcomment %}</h5> 
    <a class="down" field="quantity"><i class="icon-minus"></i></a>
    <input min="1" type="text" name="quantity" class="quantity" value="1" />
    <a class="up" field="quantity"><i class="icon-plus"></i></a>
    {% endif %}
    <input type="submit" name="button" class="add" value="{% comment %}ly_i18n_replace_for_[ 'products.product.pre_order' | t ]_begin{% endcomment %}{% capture ly_template %}{{ 'products.product.pre_order' | t }}{% endcapture %}{% include 'ly-static-string' with '2929572' %}{% if ly_translation %}{% assign escape_content = true %}{% assign ly_template = ly_translation %}{% else %}{% assign escape_content = false %}{% endif %}{% if escape_content %}{{ ly_template | escape}}{% else %}{{ ly_template }}{% endif %}{% comment %}ly_i18n_replace_end{% endcomment %}" />
  </div>
  <p class="add-to-cart-msg"></p> 
  {% endif %}
</form>    


<script>
  // Shopify Product form requirement
  selectCallback = function(variant, selector) {
    var $product = $('#product-' + selector.product.id);    
    
    {% if template != 'product.quick' %}
    // BEGIN SWATCHES
    if (variant) {
      for (i=0;i<variant.options.length;i++) {
        jQuery('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]').prop('checked', true);
      }      
    }
    // END SWATCHES
    {% endif %}
    
    
    if (variant && variant.available == true) {
      if(variant.compare_at_price > variant.price){
        $('.was', $product).html(Shopify.formatMoney(variant.compare_at_price, $('form', $product).data('money-format')))        
      } else {
        $('.was', $product).text('')
      } 
      $('.product-price', $product).html(Shopify.formatMoney(variant.price, $('form', $product).data('money-format'))) 
      $('.add', $product).removeClass('disabled').removeAttr('disabled').val('{% comment %}ly_i18n_replace_for_[ 'products.product.pre_order' | t ]_begin{% endcomment %}{% capture ly_template %}{{ 'products.product.pre_order' | t }}{% endcapture %}{% include 'ly-static-string' with '2929572' %}{% if ly_translation %}{% assign escape_content = true %}{% assign ly_template = ly_translation %}{% else %}{% assign escape_content = false %}{% endif %}{% if escape_content %}{{ ly_template | escape}}{% else %}{{ ly_template }}{% endif %}{% comment %}ly_i18n_replace_end{% endcomment %}');
    } else {
      var message = variant ? "{% comment %}ly_i18n_replace_for_[ 'products.product.sold_out' | t ]_begin{% endcomment %}{% capture ly_template %}{{ 'products.product.sold_out' | t }}{% endcapture %}{% include 'ly-static-string' with '2929573' %}{% if ly_translation %}{% assign escape_content = true %}{% assign ly_template = ly_translation %}{% else %}{% assign escape_content = false %}{% endif %}{% if escape_content %}{{ ly_template | escape}}{% else %}{{ ly_template }}{% endif %}{% comment %}ly_i18n_replace_end{% endcomment %}" : "{% comment %}ly_i18n_replace_for_[ 'products.product.sold_out' | t ]_begin{% endcomment %}{% capture ly_template %}{{ 'products.product.sold_out' | t }}{% endcapture %}{% include 'ly-static-string' with '2929573' %}{% if ly_translation %}{% assign escape_content = true %}{% assign ly_template = ly_translation %}{% else %}{% assign escape_content = false %}{% endif %}{% if escape_content %}{{ ly_template | escape}}{% else %}{{ ly_template }}{% endif %}{% comment %}ly_i18n_replace_end{% endcomment %}";
      $('.was', $product).text('')
      $('.product-price', $product).text(message);
      $('.add', $product).addClass('disabled').attr('disabled', 'disabled').val(message); 
    } 
    
    
    if (variant && variant.featured_image) {
      var original_image = $("#{{ product.id }}"), new_image = variant.featured_image;
      Shopify.Image.switchImage(new_image, original_image[0], function (new_image_src, original_image, element) {
        
        $(element).parents('a').attr('href', new_image_src);
        $(element).attr('src', new_image_src);   
        $(element).attr('data-image', new_image_src);   
        $(element).attr('data-zoom-image',new_image_src);
		
        $('.thumbnail[data-image-id="' + variant.featured_image.id + '"]').trigger('click');
             
      });
    }
    
  }; 
</script>

{% if product.variants.size > 1 or product.options.size > 1 %}
<script type="text/javascript">
  $(function() { 
    $product = $('#product-' + {{ product.id }});
    new Shopify.OptionSelectors("product-select-{{ product.id }}", { product: {{ product | json }}, onVariantSelected:
    selectCallback{% if template contains 'product'%}, enableHistoryState: true{% endif %} });

    {% if template != 'product.quick' %}
    jQuery('.swatch :radio').change(function() {
      var optionIndex = jQuery(this).parents('.swatch').attr('data-option-index');
      var optionValue = jQuery(this).val();
      jQuery('#product-{{ product.id }} .single-option-selector').eq(optionIndex).find('option').filter(function() { return jQuery(this).text() == optionValue }).parent().val(optionValue).trigger('change');	   
     }); 
     {% endif %}
        $('.single-option-selector').selecter();  
   });       
</script>
{% endif %}
<script>$(window).load(function() { $('.selector-wrapper:eq({{ option_index }})').hide(); });</script>